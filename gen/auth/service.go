// Code generated by goa v3.14.1, DO NOT EDIT.
//
// auth service
//
// Command:
// $ goa gen backend/design

package auth

import (
	"context"
)

// The auth service manages authentication
type Service interface {
	// Login to the system
	Login(context.Context, *LoginPayload) (res *LoginResult, err error)
	// Register a new user
	Register(context.Context, *RegisterPayload) (res *RegisterResult, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "auth"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [2]string{"login", "register"}

// LoginPayload is the payload type of the auth service login method.
type LoginPayload struct {
	// Username to login with
	Username string
	// Password to login with
	Password string
}

// LoginResult is the result type of the auth service login method.
type LoginResult struct {
	// JWT token to use for authentication
	Token string
}

// RegisterPayload is the payload type of the auth service register method.
type RegisterPayload struct {
	// Username to register with
	Username string
	// Password to register with
	Password string
}

// RegisterResult is the result type of the auth service register method.
type RegisterResult struct {
	// JWT token to use for authentication
	Token string
}

type AuthFailed struct {
	// Error message
	Message string
}

// Error returns an error description.
func (e *AuthFailed) Error() string {
	return ""
}

// ErrorName returns "auth_failed".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e *AuthFailed) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "auth_failed".
func (e *AuthFailed) GoaErrorName() string {
	return "login_failed"
}
