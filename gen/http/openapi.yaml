swagger: "2.0"
info:
    title: Task Service
    description: Service for managing tasks
    version: ""
host: 0.0.0.0:8000
consumes:
    - application/json
    - application/xml
    - application/gob
produces:
    - application/json
    - application/xml
    - application/gob
paths:
    /auth/login:
        post:
            tags:
                - auth
            summary: login auth
            description: Login to the system
            operationId: auth#login
            parameters:
                - name: LoginRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/AuthLoginRequestBody'
                    required:
                        - username
                        - password
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/AuthLoginResponseBody'
                        required:
                            - token
                "401":
                    description: Unauthorized response.
                    schema:
                        $ref: '#/definitions/AuthLoginLoginFailedResponseBody'
                        required:
                            - message
                            - name
            schemes:
                - http
    /auth/register:
        post:
            tags:
                - auth
            summary: register auth
            description: Register a new user
            operationId: auth#register
            parameters:
                - name: RegisterRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/AuthRegisterRequestBody'
                    required:
                        - username
                        - password
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/AuthRegisterResponseBody'
                        required:
                            - token
                "400":
                    description: Username already exists
                    schema:
                        $ref: '#/definitions/AuthRegisterRegisterFailedResponseBody'
                        required:
                            - message
                            - name
            schemes:
                - http
    /tasks:
        get:
            tags:
                - task
            summary: list task
            description: |-
                List all tasks

                **Required security scopes for jwt**:
                  * `api:read`
            operationId: task#list
            parameters:
                - name: limit
                  in: query
                  description: Maximum number of tasks to return
                  required: false
                  type: integer
                  default: 20
                - name: offset
                  in: query
                  description: Offset into the list of tasks to start at
                  required: false
                  type: integer
                  default: 0
                - name: name
                  in: query
                  description: Filter by name
                  required: false
                  type: string
                  default: ""
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/TaskListResponseBody'
                "401":
                    description: Unauthorized response.
                    schema:
                        $ref: '#/definitions/TaskListTokenVerificationFailedResponseBody'
                        required:
                            - message
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
        post:
            tags:
                - task
            summary: create task
            description: |-
                Create a task

                **Required security scopes for jwt**:
                  * `api:read`
            operationId: task#create
            parameters:
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
                - name: CreateRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/TaskCreateRequestBody'
                    required:
                        - name
                        - created_by
            responses:
                "201":
                    description: Created response.
                    schema:
                        $ref: '#/definitions/TaskCreateResponseBody'
                "401":
                    description: Unauthorized response.
                    schema:
                        $ref: '#/definitions/TaskCreateTokenVerificationFailedResponseBody'
                        required:
                            - message
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
    /tasks/{id}:
        get:
            tags:
                - task
            summary: show task
            description: |-
                Show a task

                **Required security scopes for jwt**:
                  * `api:read`
            operationId: task#show
            parameters:
                - name: id
                  in: path
                  description: ID of task to show
                  required: true
                  type: integer
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/TaskShowResponseBody'
                "401":
                    description: Unauthorized response.
                    schema:
                        $ref: '#/definitions/TaskShowTokenVerificationFailedResponseBody'
                        required:
                            - message
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/TaskShowTaskNotFoundResponseBody'
                        required:
                            - message
                            - name
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
        put:
            tags:
                - task
            summary: update task
            description: |-
                Update a task

                **Required security scopes for jwt**:
                  * `api:read`
            operationId: task#update
            parameters:
                - name: id
                  in: path
                  description: ID of task to update
                  required: true
                  type: integer
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
                - name: UpdateRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/TaskUpdateRequestBody'
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/TaskUpdateResponseBody'
                "401":
                    description: Unauthorized response.
                    schema:
                        $ref: '#/definitions/TaskUpdateTokenVerificationFailedResponseBody'
                        required:
                            - message
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/TaskUpdateTaskNotFoundResponseBody'
                        required:
                            - message
                            - name
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
        delete:
            tags:
                - task
            summary: delete task
            description: |-
                Delete a task

                **Required security scopes for jwt**:
                  * `api:read`
            operationId: task#delete
            parameters:
                - name: id
                  in: path
                  description: ID of task to delete
                  required: true
                  type: integer
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
            responses:
                "200":
                    description: OK response.
                "401":
                    description: Unauthorized response.
                    schema:
                        $ref: '#/definitions/TaskDeleteTokenVerificationFailedResponseBody'
                        required:
                            - message
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
    /tasks/{id}/done:
        put:
            tags:
                - task
            summary: done task
            description: |-
                Mark a task as done

                **Required security scopes for jwt**:
                  * `api:read`
            operationId: task#done
            parameters:
                - name: id
                  in: path
                  description: ID of task to mark as done
                  required: true
                  type: integer
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
                - name: DoneRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/TaskDoneRequestBody'
                    required:
                        - done_by
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/TaskDoneResponseBody'
                "401":
                    description: Unauthorized response.
                    schema:
                        $ref: '#/definitions/TaskDoneTokenVerificationFailedResponseBody'
                        required:
                            - message
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
definitions:
    AuthLoginLoginFailedResponseBody:
        title: AuthLoginLoginFailedResponseBody
        type: object
        properties:
            message:
                type: string
                description: reason for failure
                example: Doloremque illum.
            name:
                type: string
                description: Name of the error
                example: Consequuntur excepturi voluptatibus tenetur nisi.
        description: User not found
        example:
            message: Ab cumque quia accusamus.
            name: Neque error et repellat porro recusandae.
        required:
            - message
            - name
    AuthLoginRequestBody:
        title: AuthLoginRequestBody
        type: object
        properties:
            password:
                type: string
                description: Password to login with
                example: Voluptas quod sunt expedita rerum sit.
            username:
                type: string
                description: Username to login with
                example: Qui sed ut et.
        example:
            password: Architecto unde doloribus asperiores iste.
            username: Sequi iusto laborum tempora hic est voluptate.
        required:
            - username
            - password
    AuthLoginResponseBody:
        title: AuthLoginResponseBody
        type: object
        properties:
            token:
                type: string
                description: JWT token to use for authentication
                example: Quaerat eos ipsa temporibus voluptate.
        example:
            token: Ipsum vero.
        required:
            - token
    AuthRegisterRegisterFailedResponseBody:
        title: AuthRegisterRegisterFailedResponseBody
        type: object
        properties:
            message:
                type: string
                description: reason for failure
                example: At aut beatae error.
            name:
                type: string
                description: Name of the error
                example: Omnis reprehenderit cumque mollitia alias non hic.
        description: Username already exists
        example:
            message: Rerum ducimus incidunt id laborum hic distinctio.
            name: Voluptates voluptatem quia qui.
        required:
            - message
            - name
    AuthRegisterRequestBody:
        title: AuthRegisterRequestBody
        type: object
        properties:
            password:
                type: string
                description: Password to register with
                example: Sit asperiores distinctio laborum dignissimos quis.
            username:
                type: string
                description: Username to register with
                example: Pariatur aut modi.
        example:
            password: Cum sed saepe incidunt.
            username: Praesentium laudantium ducimus.
        required:
            - username
            - password
    AuthRegisterResponseBody:
        title: AuthRegisterResponseBody
        type: object
        properties:
            token:
                type: string
                description: JWT token to use for authentication
                example: Totam ut.
        example:
            token: Sit et reiciendis dolores itaque.
        required:
            - token
    BackendStoredTaskResponseBody:
        title: 'Mediatype identifier: applicaiton/vnd.backend.stored-task; view=default'
        type: object
        properties:
            createdAt:
                type: string
                description: When the todo was created in ISO format
                example: Dolor iusto.
            createdBy:
                type: string
                description: Who created the todo
                example: Et fuga magnam et dolor at velit.
            description:
                type: string
                description: Description of the todo
                example: Necessitatibus vitae.
            done:
                type: boolean
                description: Whether or not the todo is done
                default: false
                example: false
            doneAt:
                type: string
                description: When the todo was done in ISO format
                default: ""
                example: Perferendis hic.
            doneBy:
                type: string
                description: Who did the todo
                default: ""
                example: Ea modi.
            id:
                type: integer
                description: Unique ID
                example: 2451133002
                format: int32
            name:
                type: string
                description: Name of the todo
                example: Eligendi quisquam eos dolore nesciunt.
        description: A task (default view)
        example:
            createdAt: Ut est eum facere rerum qui.
            createdBy: Doloribus consequuntur.
            description: Sed alias.
            done: false
            doneAt: Voluptas iusto veniam eos maiores aut.
            doneBy: Eum eveniet ullam fuga.
            id: 2985746506
            name: In dolorem consequatur quibusdam et.
        required:
            - id
            - name
            - description
            - done
            - createdAt
            - createdBy
    BackendStoredTaskResponseBodyCollection:
        title: 'Mediatype identifier: applicaiton/vnd.backend.stored-task; type=collection; view=default'
        type: array
        items:
            $ref: '#/definitions/BackendStoredTaskResponseBody'
        description: BackendStored-TaskCollectionResponseBody is the result type for an array of BackendStored-TaskResponseBody (default view)
        example:
            - createdAt: Cum impedit.
              createdBy: Nihil quaerat.
              description: Ut qui quas vel velit hic.
              done: true
              doneAt: Eos qui enim nihil qui recusandae ipsam.
              doneBy: Architecto tempora aperiam quam qui accusantium.
              id: 3362513943
              name: Minima excepturi eaque dignissimos molestias officiis maiores.
            - createdAt: Cum impedit.
              createdBy: Nihil quaerat.
              description: Ut qui quas vel velit hic.
              done: true
              doneAt: Eos qui enim nihil qui recusandae ipsam.
              doneBy: Architecto tempora aperiam quam qui accusantium.
              id: 3362513943
              name: Minima excepturi eaque dignissimos molestias officiis maiores.
    TaskCreateRequestBody:
        title: TaskCreateRequestBody
        type: object
        properties:
            created_by:
                type: string
                description: Who created the task
                example: Officiis ad quibusdam rerum distinctio ex doloremque.
            description:
                type: string
                description: Description of the task
                example: Nulla aut ut optio qui maiores quis.
            id:
                type: integer
                description: ID of task to create
                example: 495133144
                format: int32
            name:
                type: string
                description: Name of the task
                example: Odit veniam.
        example:
            created_by: Omnis qui porro.
            description: Ut qui sint voluptatibus fugiat quasi distinctio.
            id: 2397615876
            name: Voluptatibus illum eaque et.
        required:
            - name
            - created_by
    TaskCreateResponseBody:
        title: TaskCreateResponseBody
        type: object
        properties:
            task:
                $ref: '#/definitions/BackendStoredTaskResponseBody'
        example:
            task:
                createdAt: Cupiditate autem quibusdam.
                createdBy: Soluta unde quibusdam aut et.
                description: Voluptate dolores quas et ex.
                done: true
                doneAt: Molestiae sed vitae aperiam eaque qui.
                doneBy: Nihil ipsam sunt autem accusamus beatae eaque.
                id: 1602291338
                name: Tempore et id labore ipsa ullam.
    TaskCreateTokenVerificationFailedResponseBody:
        title: TaskCreateTokenVerificationFailedResponseBody
        type: object
        properties:
            message:
                type: string
                description: Error message
                example: Officiis officiis dolorum illum.
        example:
            message: Quis delectus et corporis ipsum ratione voluptas.
        required:
            - message
    TaskDeleteTokenVerificationFailedResponseBody:
        title: TaskDeleteTokenVerificationFailedResponseBody
        type: object
        properties:
            message:
                type: string
                description: Error message
                example: Est commodi blanditiis quis eos.
        example:
            message: Molestias id ut veniam corrupti et dicta.
        required:
            - message
    TaskDoneRequestBody:
        title: TaskDoneRequestBody
        type: object
        properties:
            done_by:
                type: string
                description: Who did the task
                example: Et rerum autem aut.
        example:
            done_by: Nihil qui aut sit quia.
        required:
            - done_by
    TaskDoneResponseBody:
        title: TaskDoneResponseBody
        type: object
        properties:
            task:
                $ref: '#/definitions/BackendStoredTaskResponseBody'
        example:
            task:
                createdAt: Cupiditate autem quibusdam.
                createdBy: Soluta unde quibusdam aut et.
                description: Voluptate dolores quas et ex.
                done: true
                doneAt: Molestiae sed vitae aperiam eaque qui.
                doneBy: Nihil ipsam sunt autem accusamus beatae eaque.
                id: 1602291338
                name: Tempore et id labore ipsa ullam.
    TaskDoneTokenVerificationFailedResponseBody:
        title: TaskDoneTokenVerificationFailedResponseBody
        type: object
        properties:
            message:
                type: string
                description: Error message
                example: Deleniti dolore consectetur enim aut eos.
        example:
            message: Harum et hic.
        required:
            - message
    TaskListResponseBody:
        title: TaskListResponseBody
        type: object
        properties:
            tasks:
                $ref: '#/definitions/BackendStoredTaskResponseBodyCollection'
        example:
            tasks:
                - createdAt: Cupiditate autem quibusdam.
                  createdBy: Soluta unde quibusdam aut et.
                  description: Voluptate dolores quas et ex.
                  done: true
                  doneAt: Molestiae sed vitae aperiam eaque qui.
                  doneBy: Nihil ipsam sunt autem accusamus beatae eaque.
                  id: 1602291338
                  name: Tempore et id labore ipsa ullam.
                - createdAt: Cupiditate autem quibusdam.
                  createdBy: Soluta unde quibusdam aut et.
                  description: Voluptate dolores quas et ex.
                  done: true
                  doneAt: Molestiae sed vitae aperiam eaque qui.
                  doneBy: Nihil ipsam sunt autem accusamus beatae eaque.
                  id: 1602291338
                  name: Tempore et id labore ipsa ullam.
    TaskListTokenVerificationFailedResponseBody:
        title: TaskListTokenVerificationFailedResponseBody
        type: object
        properties:
            message:
                type: string
                description: Error message
                example: Amet dolor quia illum explicabo illo corrupti.
        example:
            message: Aperiam occaecati dolorem molestiae quia dolor velit.
        required:
            - message
    TaskShowResponseBody:
        title: TaskShowResponseBody
        type: object
        properties:
            task:
                $ref: '#/definitions/BackendStoredTaskResponseBody'
        example:
            task:
                createdAt: Cupiditate autem quibusdam.
                createdBy: Soluta unde quibusdam aut et.
                description: Voluptate dolores quas et ex.
                done: true
                doneAt: Molestiae sed vitae aperiam eaque qui.
                doneBy: Nihil ipsam sunt autem accusamus beatae eaque.
                id: 1602291338
                name: Tempore et id labore ipsa ullam.
    TaskShowTaskNotFoundResponseBody:
        title: TaskShowTaskNotFoundResponseBody
        type: object
        properties:
            message:
                type: string
                description: reason for failure
                example: Et voluptas et eius.
            name:
                type: string
                description: Name of the error
                example: Rerum excepturi consectetur voluptates voluptatibus harum.
        description: task not found
        example:
            message: Facere facere earum quas illo cupiditate voluptas.
            name: Odit praesentium aliquid perspiciatis placeat assumenda nemo.
        required:
            - message
            - name
    TaskShowTokenVerificationFailedResponseBody:
        title: TaskShowTokenVerificationFailedResponseBody
        type: object
        properties:
            message:
                type: string
                description: Error message
                example: Natus porro mollitia voluptates incidunt quos vitae.
        example:
            message: Voluptatem iusto sunt velit.
        required:
            - message
    TaskUpdateRequestBody:
        title: TaskUpdateRequestBody
        type: object
        properties:
            description:
                type: string
                description: Description of the task
                example: Iste quia earum.
            name:
                type: string
                description: Name of the task
                example: Rerum nobis fugiat placeat.
        example:
            description: Voluptatem neque aut numquam optio facilis.
            name: Provident enim eligendi voluptas placeat.
    TaskUpdateResponseBody:
        title: TaskUpdateResponseBody
        type: object
        properties:
            task:
                $ref: '#/definitions/BackendStoredTaskResponseBody'
        example:
            task:
                createdAt: Cupiditate autem quibusdam.
                createdBy: Soluta unde quibusdam aut et.
                description: Voluptate dolores quas et ex.
                done: true
                doneAt: Molestiae sed vitae aperiam eaque qui.
                doneBy: Nihil ipsam sunt autem accusamus beatae eaque.
                id: 1602291338
                name: Tempore et id labore ipsa ullam.
    TaskUpdateTaskNotFoundResponseBody:
        title: TaskUpdateTaskNotFoundResponseBody
        type: object
        properties:
            message:
                type: string
                description: reason for failure
                example: Aperiam atque quia et repudiandae magnam.
            name:
                type: string
                description: Name of the error
                example: Error recusandae quae.
        description: Task not found
        example:
            message: Enim illo provident ducimus blanditiis ut et.
            name: Voluptas distinctio minus.
        required:
            - message
            - name
    TaskUpdateTokenVerificationFailedResponseBody:
        title: TaskUpdateTokenVerificationFailedResponseBody
        type: object
        properties:
            message:
                type: string
                description: Error message
                example: Aspernatur et molestias in perspiciatis accusantium et.
        example:
            message: Quis possimus dignissimos.
        required:
            - message
securityDefinitions:
    jwt_header_Authorization:
        type: apiKey
        description: |-
            JWT Authentication for the API

            **Security Scopes**:
              * `api:read`: Provides read access
              * `api:write`: Provides write access
        name: Authorization
        in: header
