swagger: "2.0"
info:
    title: Task Service
    description: Service for managing tasks
    version: ""
host: 0.0.0.0:8000
consumes:
    - application/json
    - application/xml
    - application/gob
produces:
    - application/json
    - application/xml
    - application/gob
paths:
    /auth/login:
        post:
            tags:
                - auth
            summary: login auth
            description: Login to the system
            operationId: auth#login
            parameters:
                - name: LoginRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/AuthLoginRequestBody'
                    required:
                        - username
                        - password
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/AuthLoginResponseBody'
                        required:
                            - token
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
            schemes:
                - http
    /auth/register:
        post:
            tags:
                - auth
            summary: register auth
            description: Register a new user
            operationId: auth#register
            parameters:
                - name: RegisterRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/AuthRegisterRequestBody'
                    required:
                        - username
                        - password
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/AuthRegisterResponseBody'
                        required:
                            - token
                "400":
                    description: Username already exists
                    schema:
                        type: string
            schemes:
                - http
    /tasks:
        get:
            tags:
                - task
            summary: list task
            description: |-
                List all tasks

                **Required security scopes for jwt**:
                  * `api:read`
            operationId: task#list
            parameters:
                - name: limit
                  in: query
                  description: Maximum number of tasks to return
                  required: false
                  type: integer
                  default: 20
                - name: offset
                  in: query
                  description: Offset into the list of tasks to start at
                  required: false
                  type: integer
                  default: 0
                - name: name
                  in: query
                  description: Filter by name
                  required: false
                  type: string
                  default: ""
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/TaskListResponseBody'
                "401":
                    description: Unauthorized response.
                    schema:
                        $ref: '#/definitions/TaskListTokenVerificationFailedResponseBody'
                        required:
                            - message
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
        post:
            tags:
                - task
            summary: create task
            description: |-
                Create a task

                **Required security scopes for jwt**:
                  * `api:read`
            operationId: task#create
            parameters:
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
                - name: CreateRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/TaskCreateRequestBody'
                    required:
                        - name
                        - created_by
            responses:
                "201":
                    description: Created response.
                    schema:
                        $ref: '#/definitions/TaskCreateResponseBody'
                "401":
                    description: Unauthorized response.
                    schema:
                        $ref: '#/definitions/TaskCreateTokenVerificationFailedResponseBody'
                        required:
                            - message
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
    /tasks/{id}:
        get:
            tags:
                - task
            summary: show task
            description: |-
                Show a task

                **Required security scopes for jwt**:
                  * `api:read`
            operationId: task#show
            parameters:
                - name: id
                  in: path
                  description: ID of task to show
                  required: true
                  type: integer
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/TaskShowResponseBody'
                "401":
                    description: Unauthorized response.
                    schema:
                        $ref: '#/definitions/TaskShowTokenVerificationFailedResponseBody'
                        required:
                            - message
                "404":
                    description: Not Found response.
                    schema:
                        type: string
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
        put:
            tags:
                - task
            summary: update task
            description: |-
                Update a task

                **Required security scopes for jwt**:
                  * `api:read`
            operationId: task#update
            parameters:
                - name: id
                  in: path
                  description: ID of task to update
                  required: true
                  type: integer
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
                - name: UpdateRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/TaskUpdateRequestBody'
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/TaskUpdateResponseBody'
                "401":
                    description: Unauthorized response.
                    schema:
                        $ref: '#/definitions/TaskUpdateTokenVerificationFailedResponseBody'
                        required:
                            - message
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
        delete:
            tags:
                - task
            summary: delete task
            description: |-
                Delete a task

                **Required security scopes for jwt**:
                  * `api:read`
            operationId: task#delete
            parameters:
                - name: id
                  in: path
                  description: ID of task to delete
                  required: true
                  type: integer
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
            responses:
                "200":
                    description: OK response.
                "401":
                    description: Unauthorized response.
                    schema:
                        $ref: '#/definitions/TaskDeleteTokenVerificationFailedResponseBody'
                        required:
                            - message
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
    /tasks/{id}/done:
        put:
            tags:
                - task
            summary: done task
            description: |-
                Mark a task as done

                **Required security scopes for jwt**:
                  * `api:read`
            operationId: task#done
            parameters:
                - name: id
                  in: path
                  description: ID of task to mark as done
                  required: true
                  type: integer
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
                - name: DoneRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/TaskDoneRequestBody'
                    required:
                        - done_by
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/TaskDoneResponseBody'
                "401":
                    description: Unauthorized response.
                    schema:
                        $ref: '#/definitions/TaskDoneTokenVerificationFailedResponseBody'
                        required:
                            - message
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
definitions:
    AuthLoginRequestBody:
        title: AuthLoginRequestBody
        type: object
        properties:
            password:
                type: string
                description: Password to login with
                example: Corrupti assumenda dolorem voluptatem asperiores consequatur.
            username:
                type: string
                description: Username to login with
                example: Eveniet veritatis doloremque ad accusamus.
        example:
            password: Aliquam laborum voluptatem ut.
            username: Quisquam voluptas consequuntur dolorem libero.
        required:
            - username
            - password
    AuthLoginResponseBody:
        title: AuthLoginResponseBody
        type: object
        properties:
            token:
                type: string
                description: JWT token to use for authentication
                example: Sequi nihil.
        example:
            token: Dolorem fugiat quo quia quaerat.
        required:
            - token
    AuthRegisterRequestBody:
        title: AuthRegisterRequestBody
        type: object
        properties:
            password:
                type: string
                description: Password to register with
                example: Illum fugiat consequuntur excepturi voluptatibus tenetur.
            username:
                type: string
                description: Username to register with
                example: Vero occaecati.
        example:
            password: Accusamus fugit neque error.
            username: Aut ab cumque.
        required:
            - username
            - password
    AuthRegisterResponseBody:
        title: AuthRegisterResponseBody
        type: object
        properties:
            token:
                type: string
                description: JWT token to use for authentication
                example: Et enim itaque qui et est voluptas.
        example:
            token: Nulla quaerat eos ipsa temporibus voluptate velit.
        required:
            - token
    BackendStoredTaskResponseBody:
        title: 'Mediatype identifier: applicaiton/vnd.backend.stored-task; view=default'
        type: object
        properties:
            createdAt:
                type: string
                description: When the todo was created in ISO format
                example: Iste dolores totam ut incidunt sit.
            createdBy:
                type: string
                description: Who created the todo
                example: Reiciendis dolores.
            description:
                type: string
                description: Description of the todo
                example: Voluptas quod sunt expedita rerum sit.
            done:
                type: boolean
                description: Whether or not the todo is done
                default: false
                example: true
            doneAt:
                type: string
                description: When the todo was done in ISO format
                default: ""
                example: Iusto laborum tempora hic.
            doneBy:
                type: string
                description: Who did the todo
                default: ""
                example: Voluptate et architecto unde doloribus.
            id:
                type: integer
                description: Unique ID
                example: 931838005
                format: int32
            name:
                type: string
                description: Name of the todo
                example: Porro recusandae quae qui sed ut et.
        description: A task (default view)
        example:
            createdAt: Quia qui voluptates pariatur aut modi qui.
            createdBy: Asperiores distinctio laborum.
            description: Omnis reprehenderit cumque mollitia alias non hic.
            done: true
            doneAt: Ducimus incidunt id.
            doneBy: Hic distinctio omnis voluptates.
            id: 3144741982
            name: At aut beatae error.
        required:
            - id
            - name
            - description
            - done
            - createdAt
            - createdBy
    BackendStoredTaskResponseBodyCollection:
        title: 'Mediatype identifier: applicaiton/vnd.backend.stored-task; type=collection; view=default'
        type: array
        items:
            $ref: '#/definitions/BackendStoredTaskResponseBody'
        description: BackendStored-TaskCollectionResponseBody is the result type for an array of BackendStored-TaskResponseBody (default view)
        example:
            - createdAt: Omnis perferendis hic commodi ea.
              createdBy: Perspiciatis dolor iusto in et fuga.
              description: Cum sed saepe incidunt.
              done: true
              doneAt: Eligendi quisquam eos dolore nesciunt.
              doneBy: Necessitatibus vitae.
              id: 1692710608
              name: Praesentium laudantium ducimus.
            - createdAt: Omnis perferendis hic commodi ea.
              createdBy: Perspiciatis dolor iusto in et fuga.
              description: Cum sed saepe incidunt.
              done: true
              doneAt: Eligendi quisquam eos dolore nesciunt.
              doneBy: Necessitatibus vitae.
              id: 1692710608
              name: Praesentium laudantium ducimus.
            - createdAt: Omnis perferendis hic commodi ea.
              createdBy: Perspiciatis dolor iusto in et fuga.
              description: Cum sed saepe incidunt.
              done: true
              doneAt: Eligendi quisquam eos dolore nesciunt.
              doneBy: Necessitatibus vitae.
              id: 1692710608
              name: Praesentium laudantium ducimus.
    TaskCreateRequestBody:
        title: TaskCreateRequestBody
        type: object
        properties:
            created_by:
                type: string
                description: Who created the task
                example: Ut qui quas vel velit hic.
            description:
                type: string
                description: Description of the task
                example: Minima excepturi eaque dignissimos molestias officiis maiores.
            id:
                type: integer
                description: ID of task to create
                example: 993235976
                format: int32
            name:
                type: string
                description: Name of the task
                example: Qui iure doloribus consequuntur rerum doloremque.
        example:
            created_by: Cum impedit.
            description: Architecto tempora aperiam quam qui accusantium.
            id: 3760826724
            name: Eos qui enim nihil qui recusandae ipsam.
        required:
            - name
            - created_by
    TaskCreateResponseBody:
        title: TaskCreateResponseBody
        type: object
        properties:
            task:
                $ref: '#/definitions/BackendStoredTaskResponseBody'
        example:
            task:
                createdAt: Cupiditate autem quibusdam.
                createdBy: Soluta unde quibusdam aut et.
                description: Voluptate dolores quas et ex.
                done: true
                doneAt: Molestiae sed vitae aperiam eaque qui.
                doneBy: Nihil ipsam sunt autem accusamus beatae eaque.
                id: 1602291338
                name: Tempore et id labore ipsa ullam.
    TaskCreateTokenVerificationFailedResponseBody:
        title: TaskCreateTokenVerificationFailedResponseBody
        type: object
        properties:
            message:
                type: string
                description: Error message
                example: Suscipit eum eveniet ullam.
        example:
            message: Expedita ut est eum.
        required:
            - message
    TaskDeleteTokenVerificationFailedResponseBody:
        title: TaskDeleteTokenVerificationFailedResponseBody
        type: object
        properties:
            message:
                type: string
                description: Error message
                example: Quis delectus et corporis ipsum ratione voluptas.
        example:
            message: Atque odit veniam est.
        required:
            - message
    TaskDoneRequestBody:
        title: TaskDoneRequestBody
        type: object
        properties:
            done_by:
                type: string
                description: Who did the task
                example: Voluptatem iusto sunt velit.
        example:
            done_by: Officiis officiis dolorum illum.
        required:
            - done_by
    TaskDoneResponseBody:
        title: TaskDoneResponseBody
        type: object
        properties:
            task:
                $ref: '#/definitions/BackendStoredTaskResponseBody'
        example:
            task:
                createdAt: Cupiditate autem quibusdam.
                createdBy: Soluta unde quibusdam aut et.
                description: Voluptate dolores quas et ex.
                done: true
                doneAt: Molestiae sed vitae aperiam eaque qui.
                doneBy: Nihil ipsam sunt autem accusamus beatae eaque.
                id: 1602291338
                name: Tempore et id labore ipsa ullam.
    TaskDoneTokenVerificationFailedResponseBody:
        title: TaskDoneTokenVerificationFailedResponseBody
        type: object
        properties:
            message:
                type: string
                description: Error message
                example: Odit praesentium aliquid perspiciatis placeat assumenda nemo.
        example:
            message: Natus porro mollitia voluptates incidunt quos vitae.
        required:
            - message
    TaskListResponseBody:
        title: TaskListResponseBody
        type: object
        properties:
            tasks:
                $ref: '#/definitions/BackendStoredTaskResponseBodyCollection'
        example:
            tasks:
                - createdAt: Cupiditate autem quibusdam.
                  createdBy: Soluta unde quibusdam aut et.
                  description: Voluptate dolores quas et ex.
                  done: true
                  doneAt: Molestiae sed vitae aperiam eaque qui.
                  doneBy: Nihil ipsam sunt autem accusamus beatae eaque.
                  id: 1602291338
                  name: Tempore et id labore ipsa ullam.
                - createdAt: Cupiditate autem quibusdam.
                  createdBy: Soluta unde quibusdam aut et.
                  description: Voluptate dolores quas et ex.
                  done: true
                  doneAt: Molestiae sed vitae aperiam eaque qui.
                  doneBy: Nihil ipsam sunt autem accusamus beatae eaque.
                  id: 1602291338
                  name: Tempore et id labore ipsa ullam.
    TaskListTokenVerificationFailedResponseBody:
        title: TaskListTokenVerificationFailedResponseBody
        type: object
        properties:
            message:
                type: string
                description: Error message
                example: Et dolor at velit.
        example:
            message: Iusto in dolorem consequatur quibusdam et laboriosam.
        required:
            - message
    TaskShowResponseBody:
        title: TaskShowResponseBody
        type: object
        properties:
            task:
                $ref: '#/definitions/BackendStoredTaskResponseBody'
        example:
            task:
                createdAt: Cupiditate autem quibusdam.
                createdBy: Soluta unde quibusdam aut et.
                description: Voluptate dolores quas et ex.
                done: true
                doneAt: Molestiae sed vitae aperiam eaque qui.
                doneBy: Nihil ipsam sunt autem accusamus beatae eaque.
                id: 1602291338
                name: Tempore et id labore ipsa ullam.
    TaskShowTokenVerificationFailedResponseBody:
        title: TaskShowTokenVerificationFailedResponseBody
        type: object
        properties:
            message:
                type: string
                description: Error message
                example: Alias dolore enim.
        example:
            message: Iusto veniam eos maiores.
        required:
            - message
    TaskUpdateRequestBody:
        title: TaskUpdateRequestBody
        type: object
        properties:
            description:
                type: string
                description: Description of the task
                example: Et voluptas et eius.
            name:
                type: string
                description: Name of the task
                example: Aperiam occaecati dolorem molestiae quia dolor velit.
        example:
            description: Facere facere earum quas illo cupiditate voluptas.
            name: Rerum excepturi consectetur voluptates voluptatibus harum.
    TaskUpdateResponseBody:
        title: TaskUpdateResponseBody
        type: object
        properties:
            task:
                $ref: '#/definitions/BackendStoredTaskResponseBody'
        example:
            task:
                createdAt: Cupiditate autem quibusdam.
                createdBy: Soluta unde quibusdam aut et.
                description: Voluptate dolores quas et ex.
                done: true
                doneAt: Molestiae sed vitae aperiam eaque qui.
                doneBy: Nihil ipsam sunt autem accusamus beatae eaque.
                id: 1602291338
                name: Tempore et id labore ipsa ullam.
    TaskUpdateTokenVerificationFailedResponseBody:
        title: TaskUpdateTokenVerificationFailedResponseBody
        type: object
        properties:
            message:
                type: string
                description: Error message
                example: Nihil quaerat.
        example:
            message: Amet dolor quia illum explicabo illo corrupti.
        required:
            - message
securityDefinitions:
    jwt_header_Authorization:
        type: apiKey
        description: |-
            JWT Authentication for the API

            **Security Scopes**:
              * `api:read`: Provides read access
              * `api:write`: Provides write access
        name: Authorization
        in: header
