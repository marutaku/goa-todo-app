// Code generated by goa v3.14.1, DO NOT EDIT.
//
// task service
//
// Command:
// $ goa gen backend/design

package task

import (
	"context"
)

// The task service manages task lists
type Service interface {
	// List all tasks
	List(context.Context, *ListPayload) (res *ListResult, err error)
	// Show a task
	Show(context.Context, *ShowPayload) (res *ShowResult, err error)
	// Create a task
	Create(context.Context, *CreatePayload) (res *CreateResult, err error)
	// Update a task
	Update(context.Context, *UpdatePayload) (res *UpdateResult, err error)
	// Mark a task as done
	Done(context.Context, *DonePayload) (res *DoneResult, err error)
	// Delete a task
	Delete(context.Context, *DeletePayload) (err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "task"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [6]string{"list", "show", "create", "update", "done", "delete"}

// A task
type BackendStoredTask struct {
	// Unique ID
	ID uint32 `gorm:"primaryKey" json:"id"`
	// Name of the todo
	Name string `gorm:"not null" json:"name"`
	// Description of the todo
	Description string `gorm:"not null;default ''" json:"description"`
	// Whether or not the todo is done
	Done bool `gorm:"not null;default false" json:"done"`
	// When the todo was done in ISO format
	DoneAt string `gorm:"default ''" json:"doneAt"`
	// Who did the todo
	DoneBy string `gorm:"default ''" json:"doneBy"`
	// When the todo was created in ISO format
	CreatedAt string `gorm:"not null" json:"createdAt"`
	// Who created the todo
	CreatedBy string `gorm:"not null" json:"createdBy"`
}

type BackendStoredTaskCollection []*BackendStoredTask

// CreatePayload is the payload type of the task service create method.
type CreatePayload struct {
	// ID of task to create
	ID *uint32
	// Name of the task
	Name string
	// Description of the task
	Description *string
	// Who created the task
	CreatedBy string
}

// CreateResult is the result type of the task service create method.
type CreateResult struct {
	// Created task
	Task *BackendStoredTask
}

// DeletePayload is the payload type of the task service delete method.
type DeletePayload struct {
	// ID of task to delete
	ID uint32
}

// DonePayload is the payload type of the task service done method.
type DonePayload struct {
	// ID of task to mark as done
	ID uint32
	// Who did the task
	DoneBy string
}

// DoneResult is the result type of the task service done method.
type DoneResult struct {
	// Finished task
	Task *BackendStoredTask
}

// ListPayload is the payload type of the task service list method.
type ListPayload struct {
	// Maximum number of tasks to return
	Limit uint32
	// Offset into the list of tasks to start at
	Offset uint32
	// Filter by creator
	CreatedBy string
	// Filter by name
	Name string
}

// ListResult is the result type of the task service list method.
type ListResult struct {
	// List of tasks
	Tasks BackendStoredTaskCollection
}

// ShowPayload is the payload type of the task service show method.
type ShowPayload struct {
	// ID of task to show
	ID uint32
}

// ShowResult is the result type of the task service show method.
type ShowResult struct {
	// task to show
	Task *BackendStoredTask
}

// UpdatePayload is the payload type of the task service update method.
type UpdatePayload struct {
	// ID of task to update
	ID uint32
	// Name of the task
	Name *string
	// Description of the task
	Description *string
}

// UpdateResult is the result type of the task service update method.
type UpdateResult struct {
	// Updated task
	Task *BackendStoredTask
}

// No task matched given criteria
type NoMatch string

// Error returns an error description.
func (e NoMatch) Error() string {
	return "No task matched given criteria"
}

// ErrorName returns "no_match".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e NoMatch) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "no_match".
func (e NoMatch) GoaErrorName() string {
	return "no_match"
}
