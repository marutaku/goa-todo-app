// Code generated by goa v3.14.1, DO NOT EDIT.
//
// task service
//
// Command:
// $ goa gen backend/design

package task

import (
	"context"
)

// The task service manages task lists
type Service interface {
	// List all tasks
	List(context.Context, *ListPayload) (res *ListResult, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "task"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [1]string{"list"}

// A task
type BackendStoredTask struct {
	// Unique ID
	ID uint32 `gorm:"primaryKey"`
	// Name of the todo
	Name string `gorm:"not null"`
	// Description of the todo
	Description string `gorm:"not null;default ''"`
	// Whether or not the todo is done
	Done bool `gorm:"not null;default false"`
	// When the todo was done in ISO format
	DoneAt string `gorm:"default ''"`
	// Who did the todo
	DoneBy string `gorm:"default ''"`
	// When the todo was created in ISO format
	CreatedAt string `gorm:"autoCreateTime"`
	// Who created the todo
	CreatedBy string `gorm:"not null"`
}

type BackendStoredTaskCollection []*BackendStoredTask

// ListPayload is the payload type of the task service list method.
type ListPayload struct {
	// Maximum number of tasks to return
	Limit uint32
	// Offset into the list of tasks to start at
	Offset uint32
}

// ListResult is the result type of the task service list method.
type ListResult struct {
	// List of tasks
	Tasks BackendStoredTaskCollection
}
